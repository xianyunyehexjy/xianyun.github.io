(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{464:function(t,a,e){"use strict";e.r(a);var s=e(12),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文章"}},[t._v("#")]),t._v(" 文章")]),t._v(" "),e("h2",{attrs:{id:"学习心得"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习心得"}},[t._v("#")]),t._v(" 学习心得")]),t._v(" "),e("p",[t._v("在css中有函数calc（）可以动态地计算不同比例的高度或宽度，比如")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("height: calc(100% - 30px);\n")])])]),e("p",[t._v("在css中表达正常，在less中出错，因为 less 本身就有 ‘减’ 这个操作，所以就违背了原意，所以在 less 中，要写成：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('height: ~"calc(100% - 30px)";\n')])])]),e("p",[t._v("若要需要按照某个比例固定高度可以用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('min-height: e("calc(100vh - 184px)")\n')])])]),e("p",[t._v("点击左侧栏目列表跳转到对应文章列表的问题时，初次点击可以跳转到对应的页面，但是当第二次点击时，虽然地址栏的参数改变了，也没有重新刷新页面中的内容。")]),t._v(" "),e("p",[t._v("造成上述情况的原因：\nvue项目中路由跳转默认采用hash的方式，而hash的变化不会导致浏览器发送请求到服务器；\n将获取数据的的函数的执行放在了Vue生命周期函数 mounted() 中，组件初次加载时执行了 mounted() 函数中的内容，但是再次点击时只有参数变化，组件已经挂载结束而且不会重新加载，mounted()  中的内容当然也就不会重新执行了。\n解决方案：使用侦听器监听URL地址栏参数变化\n当侦听器监听到URL地址栏参数变化时，调用获取数据列表的函数 getDate()")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("<html>\n\n    watch: {\n        '$route' (to, from) {\n            this.getData(this.$route.query.id)\n        }\n    }\n    \n    methods: {\n        async getData (id) {\n          // 按照id获取数据\n          const { data: { result } } = await this.$http.get('getShowList', {\n            params: { id }\n          })\n          this.dataList = result\n        }\n    }\n　　\n</html>\n")])])]),e("p",[t._v("通过这种方式，就能使页面内容随着参数变化而变化了")]),t._v(" "),e("h2",{attrs:{id:"css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" css")]),t._v(" "),e("p",[t._v("【CSS】既添加背景色又添加背景图")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('<div class="" style="background: center top / 100% 100% no-repeat url(xx), red"></div>\n')])])]),e("h2",{attrs:{id:"git-提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-提交"}},[t._v("#")]),t._v(" git 提交")]),t._v(" "),e("h4",{attrs:{id:"feat-新功能-feature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feat-新功能-feature"}},[t._v("#")]),t._v(" feat：新功能（feature）")]),t._v(" "),e("h4",{attrs:{id:"fix-修补bug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fix-修补bug"}},[t._v("#")]),t._v(" fix：修补bug")]),t._v(" "),e("h4",{attrs:{id:"docs-文档-documentation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docs-文档-documentation"}},[t._v("#")]),t._v(" docs：文档（documentation）")]),t._v(" "),e("h4",{attrs:{id:"style-格式-不影响代码运行的变动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#style-格式-不影响代码运行的变动"}},[t._v("#")]),t._v(" style： 格式（不影响代码运行的变动）")]),t._v(" "),e("h4",{attrs:{id:"refactor-重构-即不是新增功能-也不是修改bug的代码变动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#refactor-重构-即不是新增功能-也不是修改bug的代码变动"}},[t._v("#")]),t._v(" refactor：重构（即不是新增功能，也不是修改bug的代码变动）")]),t._v(" "),e("h4",{attrs:{id:"test-增加测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-增加测试"}},[t._v("#")]),t._v(" test：增加测试")]),t._v(" "),e("h4",{attrs:{id:"chore-构建过程或辅助工具的变动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chore-构建过程或辅助工具的变动"}},[t._v("#")]),t._v(" chore：构建过程或辅助工具的变动")]),t._v(" "),e("h4",{attrs:{id:"revert-feat-pencil-add-graphitewidth-option-撤销之前的commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#revert-feat-pencil-add-graphitewidth-option-撤销之前的commit"}},[t._v("#")]),t._v(" revert: feat(pencil): add 'graphiteWidth' option (撤销之前的commit)")])])}),[],!1,null,null,null);a.default=r.exports}}]);